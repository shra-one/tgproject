"use strict";

$(document).ready(function () {
  $(window).resize(function () {
    stickyCTA();

    if ($(".search-filter-top").length > 0) {
      calcSerchFilterHeight();
    }
  }); //bootstrap modals

  $(document).on("hidden.bs.modal", function () {
    if ($(".modal.show").length) {
      $("body").addClass("modal-open");
    }
  }); //auto complete

  if ($(".js-autocomplete").length > 0) {
    var options = {
      data: ["blue", "green", "pink", "red", "yellow"]
    };
    $(".js-autocomplete").easyAutocomplete(options);
  } //radio checked codition for upload video or link video


  $(".js-radio-toggle").on("click", function () {
    var input = $(this).find("input");
    var targetDiv = input.attr("data-target");
    $(this).closest(".card").find(".js-radio-toggle-results").hide();

    if (input.is(":checked")) {
      $("#" + targetDiv).show();
    }
  });

  if ($(".js-radio-toggle").length > 0) {
    $(".js-radio-toggle").each(function () {
      if ($(this).find("input").is(":checked")) {
        var targetDiv = $(this).find("input").attr("data-target");
        $("#" + targetDiv).show();
        console.log(targetDiv);
      }
    });
  } //lightobx for images


  if ($(".lightbox").length > 0) {
    var $gallery = new SimpleLightbox(".lightbox", {});
  } // $(".js-property-video").lightGallery();
  // lightGallary


  if ($(".lg-gallary").length > 0) {
    $(".lg-gallary").lightGallery({
      selector: ".js-lightGallary-selector",
      share: false,
      zoom: false
    });
  }

  if ($(".lg-morePhotos").length > 0) {
    $(".lg-morePhotos").lightGallery({
      selector: ".item",
      share: false,
      zoom: false
    });
  } // poplular propertise


  if ($(".js-property-carousel-mobile").length > 0) {
    $(".js-property-carousel-mobile").slick({
      infinite: false,
      slidesToShow: 1.2,
      slidesToScroll: 1,
      arrows: false,
      centerMode: false,
      variableWidth: false,
      centerPadding: "60px",
      nextArrow: "<button class=\"carousel-arrow slick-next\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M6.0001 7.2L12.0001 13.2L18.0001 7.2L20.4001 8.4L12.0001 16.8L3.6001 8.4L6.0001 7.2Z\"  />\n      </svg></button>\n      ",
      prevArrow: "<button class=\"carousel-arrow slick-prev\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M6.0001 7.2L12.0001 13.2L18.0001 7.2L20.4001 8.4L12.0001 16.8L3.6001 8.4L6.0001 7.2Z\"  />\n      </svg></button>\n      ",
      mobileFirst: true,
      responsive: [{
        breakpoint: 767,
        settings: "unslick"
      }]
    });
  } //check parent and check its children checkbox


  $(".js-parentCheckBox").click(function () {
    $(this).parents(".properties-lists").find(".js-childCheckBox").prop("checked", this.checked);
  }); //clicking the last unchecked or checked checkbox should check or uncheck the parent checkbox

  $(".js-childCheckBox").click(function () {
    var parentContainer = ".properties-lists";
    var parentCheckbox = ".js-parentCheckBox";
    if ($(this).parents(parentContainer).find(parentCheckbox).prop("checked") == true && this.checked == false) $(this).parents(parentContainer).find(parentCheckbox).prop("checked", false);

    if (this.checked == true) {
      var flag = true;
      $(this).parents(parentContainer).find(".js-childCheckBox").each(function () {
        if (this.checked == false) flag = false;
      });
      $(this).parents(parentContainer).find(parentCheckbox).prop("checked", flag);
    }
  }); //property detail page: description show more/less

  var showChar = 300; // How many characters are shown by default

  var ellipsestext = "...";
  var moretext = "Show more >";
  var lesstext = "Show less";
  $(".more").each(function () {
    var content = $(this).html();

    if (content.length > showChar) {
      var c = content.substr(0, showChar);
      var h = content.substr(showChar, content.length - showChar);
      var html = c + '<span class="moreellipses">' + ellipsestext + '&nbsp;</span><span class="morecontent"><span>' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">' + moretext + "</a></span>";
      $(this).html(html);
    }
  });
  $(".morelink").click(function () {
    if ($(this).hasClass("less")) {
      $(this).removeClass("less");
      $(this).html(moretext);
    } else {
      $(this).addClass("less");
      $(this).html(lesstext);
    }

    $(this).parent().prev().toggle();
    $(this).prev().toggle();
    return false;
  }); // chart : price history

  if ($("#priceChart").length > 0) {
    var ctx = document.getElementById("priceChart");
    var myChart = new Chart(ctx, {
      type: "line",
      aspectRatio: 2,
      data: {
        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        datasets: [{
          label: "Price",
          data: [12, 19, 3, 5, 2, 3, 18, 20, 16, 19, 20, 20],
          backgroundColor: "#A6CEE3",
          borderColor: "#4062BB",
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
  }

  function stickyCTA() {
    if ($(window).width() >= 768) {
      if ($(".property-detail-wrapper").length > 0) {
        if ($(window).scrollTop() >= $(".property-detail-wrapper").offset().top + $(".property-detail-wrapper").outerHeight() - window.innerHeight) {
          $(".fixed-cta").addClass("position-static");
        } else {
          $(".fixed-cta").removeClass("position-static");
        }
      }
    }
  }

  $(window).on("scroll", function () {
    stickyCTA();
  }); //show hdie link

  var showhide = false;
  $(".js-showhide-link").on("click", function () {
    var target = $(this).attr("data-target");
    console.log(target);
    $(this).toggleClass("showhide-link--has-shown");

    if (showhide === false) {
      $("#" + target).removeClass("collapse");
      $("#" + target).slideDown();
      showhide = true;
    } else {
      $("#" + target).addClass("collapse");
      $("#" + target).slideUp();
      showhide = false;
    }
  }); //drag and drop file using dropzone plugin

  if ($("#preview-template").length > 0) {
    var previewNode = document.querySelector("#preview-template");
    previewNode.id = "";
    var previewTemplate = previewNode.parentNode.innerHTML;
  }

  if ($("#dropcontainer").length > 0) {
    var myDropzone = new Dropzone(document.getElementById("dropcontainer"), {
      // Make the whole body a dropzone
      url: "/target-url",
      // Set the url
      thumbnailWidth: 150,
      thumbnailHeight: 150,
      parallelUploads: 20,
      previewTemplate: previewTemplate,
      autoQueue: false,
      // Make sure the files aren't queued until manually added
      previewsContainer: ".dragndrop-images",
      // Define the container to display the previews
      // clickable: ".filesUpload", // Define the element that should be used as click trigger to select files.
      init: function init() {
        this.on("thumbnail", function (file, dataUrl) {
          $(".js-lightGallary-selector").attr("href", dataUrl);
          $(".lg-gallary").lightGallery({
            selector: ".js-lightGallary-selector",
            share: false,
            zoom: false
          });
        });
      }
    });
  } //search page map toggle


  $(".js-mapViewer").on("click", function () {
    $("body").toggleClass("is-map-visible");
  });

  function calcSerchFilterHeight() {
    var filterHeight = $(".search-filter-top").outerHeight();
    console.log(filterHeight);
    $(":root").css("--filterHeight", filterHeight + "px");
  }

  if ($(".search-filter-top").length > 0) {
    calcSerchFilterHeight();
  }

  if ($("#tokenField").length > 0) {
    $("#tokenField").tokenfield();
  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
